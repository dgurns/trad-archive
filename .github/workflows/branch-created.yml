name: Branch - Created

# on: create

on:
  pull_request:
    types: [synchronize]

jobs:
  create-planetscale-db-branch-and-set-ssm-envs:
    name: Create PlanetScale DB branch and set connection env vars in AWS SSM
    runs-on: ubuntu-latest
    env:
      PLANETSCALE_SERVICE_TOKEN_NAME: ${{ secrets.PLANETSCALE_SERVICE_TOKEN_NAME }}
      PLANETSCALE_SERVICE_TOKEN: ${{ secrets.PLANETSCALE_SERVICE_TOKEN }}
    defaults:
      run:
        working-directory: api
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Authenticate with AWS
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Set up pscale CLI
        run: |
          wget https://github.com/planetscale/cli/releases/download/v0.88.0/pscale_0.88.0_linux_amd64.deb
          sudo dpkg -i pscale_0.88.0_linux_amd64.deb

      # - name: Create pscale DB branch
      #   run: |
      #     pscale branch create trad_archive ${{ github.head_ref }} --org tradarchive --region us-east-1

      - name: Create a password for this DB branch
        id: create-password
        run: |
          echo "::set-output name=dbPasswordJson::$(pscale password create trad_archive ${{ github.head_ref }} cicd --org tradarchive -f json)"

      - name: Parse DB connection info
        id: parse
        run: |
          echo ${{ outputs.create-password.dbPasswordJson }}

          echo "::set-output name=dbHost::$(echo ${{ steps.create-password.outputs.dbPasswordJson }} | jq '.database_branch.access_host_url')"
          echo "::set-output name=dbUsername::$(echo ${{ steps.create-password.outputs.dbPasswordJson }} | jq '.id')"
          echo "::set-output name=dbPassword::$(echo ${{ steps.create-password.outputs.dbPasswordJson }} | jq '.plain_text')"

      - name: Save DB connection info as AWS SSM params
        run: |
          aws ssm put-parameter --name /${{ github.head_ref }}/DATABASE_HOST --value "${{ steps.parse.outputs.dbHost }}" --type SecureString
          aws ssm put-parameter --name /${{ github.head_ref }}/DATABASE_USERNAME --value "${{ steps.parse.outputs.dbUsername }}" --type SecureString
          aws ssm put-parameter --name /${{ github.head_ref }}/DATABASE_PASSWORD --value "${{ steps.parse.outputs.dbPassword }}" --type SecureString
          aws ssm put-parameter --name /${{ github.head_ref }}/DATABASE_PORT --value "3306" --type SecureString
          aws ssm put-parameter --name /${{ github.head_ref }}/DATABASE_NAME --value "trad_archive" --type SecureString
